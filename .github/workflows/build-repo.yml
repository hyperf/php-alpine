name: "build-repo"

# workflow env.
env:
  ALPINE_ARCH: x86_64
  APORTS_SCRIPTS: /home/sandbox/scripts
  APK_MAINTAINER: ${{ secrets.APK_MAINTAINER }}
  APK_PACKAGER: ${{ secrets.APK_PACKAGER }}
  QSHELL_VERSION: "v2.6.1"
  QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
  QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
  QINIU_BUCKET: ${{ secrets.QINIU_BUCKET }}
  QINIU_CDN_BASE_URI: ${{ secrets.QINIU_CDN_BASE_URI }}
on:
  push:
    branches:
      - master
      - publish
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      ALPINE_VERSION: ${{ matrix.alpine }}
      PHP_VERSION: ${{ matrix.php }}
      PHP_MINOR_VERSION: ${{ matrix.release }}
      ALPINE_VERSION_SLUG: v${{ matrix.alpine }}
      PHP_VERSION_SLUG: php-${{ matrix.php }}
      PA_ARCH: ${{ matrix.arch }}
      PA_BUILD_SLUG: v${{ matrix.alpine }}_php-${{ matrix.php }}_${{ matrix.arch }}
      PA_BUILD_PATH: repo/v${{ matrix.alpine }}/php-${{ matrix.php }}/${{ matrix.arch }}

    strategy:
      fail-fast: false
      max-parallel: 7
      matrix:
        include:
          # alpine-v3.12-php-8.0
          - alpine: "3.12"
            php: "8.0"
            release: "8.0.8"
            arch: "x86_64"

          # alpine-v3.12-php-7.4
          - alpine: "3.12"
            php: "7.4"
            release: "7.4.21"
            arch: "x86_64"

          # alpine-v3.11-php-8.0
          - alpine: "3.11"
            php: "8.0"
            release: "8.0.8"
            arch: "x86_64"

          # alpine-v3.11-php-7.4
          - alpine: "3.11"
            php: "7.4"
            release: "7.4.21"
            arch: "x86_64"

          # alpine-v3.11-php-7.3
          - alpine: "3.11"
            php: "7.3"
            release: "7.3.29"
            arch: "x86_64"

          # alpine-v3.10-php-7.4
          - alpine: "3.10"
            php: "7.4"
            release: "7.4.21"
            arch: "x86_64"

          # alpine-v3.10-php-7.3
          - alpine: "3.10"
            php: "7.3"
            release: "7.3.29"
            arch: "x86_64"

    steps:
      # checkout repository.
      - name: git-checkout
        uses: actions/checkout@v2

      # cache packages.
      - name: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PA_BUILD_PATH }}
          key: ${{ env.PA_BUILD_SLUG }}-${{ hashFiles('scripts/**/APKBUILD') }}
          restore-keys: |
            ${{ env.PA_BUILD_SLUG }}-${{ hashFiles('scripts/**/APKBUILD') }}
            ${{ env.PA_BUILD_SLUG }}-
            ${{ env.PA_BUILD_SLUG }}

      # debug info.
      - name: debug-info
        run: |
          echo -e "Job strategy: "
          echo -e "Alpine Linux: v${{ env.ALPINE_VERSION }}"
          echo -e "PHP Version: ${{ env.PHP_VERSION }}"
          echo -e "PHP Release: ${{ env.PHP_MINOR_VERSION }}"

      # build packages.
      - name: build
        run: |
          echo "" > .env
          echo -e "${{ secrets.PHP_ALPINE_RSA }}" > .abuild/php-alpine.rsa
          echo -e "${{ secrets.PHP_ALPINE_RSA_PUB }}" > .abuild/php-alpine.rsa.pub
          docker-compose run sandbox buildrepo -a ${{ env.APORTS_SCRIPTS }} -p ${{ env.PHP_VERSION_SLUG }}

      # upload artifacts.
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PA_BUILD_SLUG }}
          path: ${{ env.PA_BUILD_PATH }}

      # publish to bintray.
      - name: publish to qiniu
        if: github.ref == 'refs/heads/publish'
        run: |
          echo -e "Publishing to Qiniu"
          curl -SL https://github.com/qiniu/qshell/releases/download/${QSHELL_VERSION}/qshell-${QSHELL_VERSION}-linux-amd64.tar.gz -o qshell.tar.gz
          tar -xf qshell.tar.gz
          chmod u+x qshell
          ./qshell account ${QINIU_ACCESS_KEY} ${QINIU_SECRET_KEY} hyperf
          sudo cp -rf repo/v${ALPINE_VERSION}/php-${PHP_VERSION} repo/v${ALPINE_VERSION}/php-${PHP_MINOR_VERSION}
          ./qshell qupload2 --src-dir=repo/v${ALPINE_VERSION} --bucket ${QINIU_BUCKET} --overwrite --key-prefix v${ALPINE_VERSION}/ --up-host https://upload-cn-east-2.qiniup.com
          echo ${QINIU_CDN_BASE_URI}/${ALPINE_VERSION_SLUG}/${PHP_VERSION_SLUG}/${PA_ARCH}/APKINDEX.tar.gz > refresh.txt
          ./qshell cdnrefresh -i refresh.txt


